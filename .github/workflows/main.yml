name: CI/CD with Minikube + ngrok

on:
  push:
    branches: ["main"]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    outputs:
      ngrok_url: ${{ steps.ngrok_url.outputs.url }}

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Start Minikube
      - name: Start Minikube
        uses: medyagh/setup-minikube@latest
        with:
          driver: docker

      # 3. Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my-app:latest .

      # 4. Load image into Minikube
      - name: Import image into Minikube
        run: |
          minikube image load my-app:latest

      # 5. Deploy Kubernetes manifests
      - name: Deploy to Minikube
        run: |
          kubectl apply -f k8s/Deployment.yaml

      # 6. Verify pods and services
      - name: Verify resources
        run: |
          kubectl get pods -o wide
          kubectl get svc -o wide

      # 7. Install ngrok
      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc > /dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install -y ngrok jq

      # 8. Start ngrok and get public URL
      - name: Expose app with ngrok
        id: ngrok_url
        run: |
          # Set ngrok auth token (from GitHub Secret)
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

          # Port-forward service
          kubectl port-forward svc/my-app-service 4499:4499 &
          sleep 5

          # Start ngrok
          ngrok http 4499 > ngrok.log &
          sleep 10

          # Extract public URL
          URL=$(curl --silent --show-error http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "ngrok public URL: $URL"

          # Set output for workflow
          echo "url=$URL" >> $GITHUB_OUTPUT
